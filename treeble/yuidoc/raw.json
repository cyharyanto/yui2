{"majorversion": 2, "filemap": {"Treeble-280patch.js": {"classlist": ["YAHOO.widget.DataTable"], "name": "Treeble-280patch.js", "module": "Treeble"}, "Treeble.js": {"classlist": ["YAHOO.util.TreebleDataSource", "YAHOO.widget.DataTable"], "name": "Treeble.js", "module": "Treeble"}, "classmap.js": {"name": "classmap.js", "classlist": [], "module": "Treeble", "guessedname": "classMap", "guessedtype": "property", "property": "classMap"}}, "modules": {"Treeble": {"description": "TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  This list of items can then be paginated by DataTable.\nThe merged list must be paginated if the number of child nodes might be\nvery large.  To turn on this feature, set paginateChildren:true.\nThe total number of items available from each DataSources must remain\nconstant.", "submodules": [], "classlist": ["YAHOO.widget.DataTable", "YAHOO.util.TreebleDataSource"], "filelist": ["Treeble-280patch.js", "Treeble.js", "classmap.js"], "subdata": {}, "name": "Treeble"}}, "classmap": {"YAHOO.util.TreebleDataSource": {"name": "YAHOO.util.TreebleDataSource", "constructors": [{"params": [{"type": "DataSource}  The top-level DataSource.\nYou must pass a treebleConfig object as part of this object's configuration.\nThis object can contain the following configuration:\n<dl>\n<dt>generateRequest</dt>\n<dd>(required) The function to convert the output from\n<code>DataTable.generateTreebleDataSourceRequest()</code> into\na request usable by one of the actual DataSources.  This function\ntakes two arguments: state {sort,dir,startIndex,results", "name": "oLiveData", "description": "  and path\n(an array of node indices telling how to reach the node).\n</dd>\n<dt>childNodesKey</dt>\n<dd>(semi-optional) The name of the key inside a node which contains\nthe data used to construct the DataSource for retrieving the children.\nThis config is only required if you provide a custom parser.</dd>\n<dt>startIndexExpr</dt>\n<dd>(optional) OGNL expression telling how to extract the startIndex\nfrom the received data, e.g., <code>.meta.startIndex</code>.\nIf it is not provided, startIndex is always assumed to be zero.</dd>\n<dt>totalRecordsExpr</dt>\n<dd>(semi-optional) OGNL expression telling how to extract the total number\nof records from the received data, e.g., <code>.meta.totalRecords</code>.\nIf this is not provided, <code>totalRecordsReturnExpr</code> must be\nspecified.</dd>\n<dt>totalRecordsReturnExpr</dt>\n<dd>(semi-optional) OGNL expression telling where in the response to store\nthe total number of records, e.g., <code>.meta.totalRecords</code>.\nThis is only appropriate for DataSources that always return the\nentire data set.  If this is not provided,\n<code>totalRecordsExpr</code> must be specified.  If both are provided,\n<code>totalRecordsExpr</code> takes priority.</dd>\n</dl>"}, {"type": "Object", "name": "oConfigs", "description": "  Object literal of configuration values.\n<dl>\n<dt>paginateChildren</dt>\n<dd>(optional) Pass <code>true</code> to paginate the result after merging\nchild nodes into the list.  The default (<code>false</code>) is to\npaginate only top-level nodes, so all children are visible.</dd>\n</dl>"}], "description": "TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  This list of items can then be paginated by DataTable.\nThe merged list must be paginated if the number of child nodes might be\nvery large.  To turn on this feature, set paginateChildren:true.\nThe total number of items available from each DataSources must remain\nconstant."}], "namespace": "YAHOO.util", "module": "Treeble", "guessedname": "TreebleDataSource", "methods": {"toggle": {"return": {"type": "boolean", "description": "false if the path to the node has not yet been fully explored or is not openable, true otherwise"}, "params": [{"type": "Array", "name": "path", "description": "  Path to the node"}, {"type": "Object", "name": "request", "description": "  Request generated by DT.generateTreebleDataSourceRequest()"}, {"type": "Function|Object} Function to call when the operation completes.  Can be object: {fn,scope,args", "name": "completion", "description": ""}], "description": "Toggle the specified node between open and closed.  When a node is\nopened for the first time, this requires a request to the\nDataSource.  Any code that assumes the node has been opened must be\npassed in as a completion function.", "guessedname": "toggle", "guessedtype": "function"}, "makeConnection": {"return": {"type": "Number", "description": "Transaction ID."}, "description": "Overriding method generates queries to all visible DataSources.", "private": "", "params": [{"type": "Object", "name": "oRequest", "description": "  Request object."}, {"type": "Object", "name": "oCallback", "description": "  Callback object literal."}, {"type": "Object", "name": "oCaller", "description": "  (deprecated) Use oCallback.scope."}], "guessedname": "makeConnection", "guessedtype": "function"}, "DataSourceBase.parseDataSource": {"return": {"type": "DataSource", "description": "The new data source."}, "description": "Converts data to a DataSource.  Data can be an object containing both\n<code>dataType</code> and <code>liveData</code>, or it can be <q>free\nform</q>, e.g., an array of records or an XHR URL.", "static": "", "guessedname": "parseDataSource", "guessedtype": "function", "params": [{"type": "mixed", "name": "oData", "description": "  Data to convert."}]}, "isOpen": {"return": {"type": "boolean", "description": "true if the node is open"}, "params": [{"type": "Array", "name": "path", "description": "  Path to node"}], "guessedname": "isOpen", "guessedtype": "function"}}, "extends": "YAHOO.util.DataSourceBase", "superclass": "YAHOO.util.DataSourceBase", "file": "Treeble.js", "guessedtype": "function", "shortname": "TreebleDataSource", "description": "TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  This list of items can then be paginated by DataTable.\nThe merged list must be paginated if the number of child nodes might be\nvery large.  To turn on this feature, set paginateChildren:true.\nThe total number of items available from each DataSources must remain\nconstant."}, "YAHOO.widget.DataTable": {"name": "YAHOO.widget.DataTable", "namespace": "YAHOO.widget", "module": "Treeble", "events": {"displayAllRecordsChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "displayAllRecordsChange", "description": "Fires when the value for the configuration attribute 'displayAllRecords' changes."}, "beforeDisplayAllRecordsChange": {"params": [{"type": "{oldValue: any, newValue: any}", "name": "event", "description": "An object containing the previous attribute value and the new value."}], "name": "beforeDisplayAllRecordsChange", "description": "Fires before the value for the configuration attribute 'displayAllRecords' changes. Return false to cancel the attribute change."}}, "guessedname": "lang", "methods": {"toggleRow": {"params": [{"type": "Array", "name": "path", "description": "  Path to node."}], "description": "Toggle the state of a row.", "guessedname": "toggleRow", "guessedtype": "function"}, "DataTable.generateTreebleDataSourceRequest": {"return": {"type": "Object", "description": "Pagination and sorting state formatted for TreebleDataSource."}, "description": "Generate the request object required by TreebleDataSource.", "static": "", "guessedname": "generateTreebleDataSourceRequest", "guessedtype": "function", "params": [{"type": "Object", "name": "oState", "description": "  Pagination and sorting state."}, {"type": "DataTable", "name": "oSelf", "description": "  The data table."}]}, "rowIsOpen": {"return": {"type": "boolean", "description": "true if the row is open."}, "params": [{"type": "Array", "name": "path", "description": "  Path to node."}], "description": "Check if a row is open.", "guessedname": "rowIsOpen", "guessedtype": "function"}, "render": {"description": "Override to provide option to display all returned records, even if\nthat is more than what paginator says is visible.", "guessedname": "render", "guessedtype": "function"}}, "file": "Treeble.js", "guessedtype": "property", "shortname": "DataTable", "configs": {"displayAllRecords": {"default": "0", "type": "Boolean", "description": "Set to true if you want to show all the records that were\nreturned, not just the records that fall inside the paginator window."}}, "description": "This is only needed for local data sources or when paginating only\ntop-level nodes, and it will be obsolete when YUI 2.9 is released."}}, "version": "1.0.0", "namespaces": ["YAHOO.widget", "YAHOO.util"]}